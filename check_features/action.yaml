name: "Check features"
description: "Action for checking features and feature gates"
author: "The Dev Nolus Team <dev@nolus.io>"

inputs:
  working_directory:
    description: "Sets working directory for any operations executing through `cargo`."
    required: true
  profile:
    description: "Specifies in which profile check should be run."
    required: true
  debug_assertions:
    description: "Specifies what `debug-assertions` should be set to."
  features:
    description: "Features to be turned on during compilation."
    required: false
  exclude_features:
    description: "Features to be turned off during compilation with mixed features."
    required: false
  rustflags:
    description: "Value to be passed as an environment variable to the Rust build system."
    required: false

runs:
  using: "composite"
  steps:
    - shell: "sh"
      run: "cargo +stable install cargo-hack"
    - shell: "sh"
      env:
        RUSTFLAGS: "${{ inputs.rustflags }}"
      run: |
        if ! test "${{ inputs.debug_assertions }}" = "";
          then (
            RUSTFLAGS="-C \"debug-assertions=${{ inputs.debug_assertions }}\" ${RUSTFLAGS}"
          );
        fi

        cargo hack --clean-per-run \
          $(if test '${{ inputs.features }}' != ''; then echo "--features '${{ inputs.features }}' --ignore-unknown-features"; fi) \
          $(if test '${{ inputs.exclude_features }}' != ''; then echo "--exclude-features '${{ inputs.exclude_features }}'"; fi) \
          --feature-powerset clippy --profile ${{ inputs.profile }} -- -D warnings
      working-directory: "${{ inputs.working_directory }}"
